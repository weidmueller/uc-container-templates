{
	"version": "2",
	"templates": [{
			"type": 1,
			"title": "Hello-World",
			"description": "Hello-World, Template Type 1 (Container)",
			"note": "Small Hello-World Image, useful for testing Portainer. Deploys a single container.<h4><span class=\"label label-warning image-tag ng-scope\">You are on the development container registry! Images from this registry are not for production use!</span></h4>",
			"categories": ["UC20-WL2000", "IOT-GW30", "Debug"],
			"platform": "linux",
			"image": "hello-world",
			"registry": "wmucdev.azurecr.io",
			"name": "hello-world"
		},
		{
			"type": 3,
			"title": "Hello-World Stack",
			"description": "Hello-World, Template Type 3 (Compose)",
			"note": "Small Hello-World Image, useful for testing Portainer. Deploys a stack from a compose file.<h4><span class=\"label label-warning image-tag ng-scope\">You are on the development container registry! Images from this registry are not for production use!</span></h4>",
			"categories": ["UC20-WL2000", "IOT-GW30", "Debug"],
			"platform": "linux",
			"repository": {
				"url": "https://github.com/weidmueller/uc-container-templates",
				"stackfile": "stacks/hello-world/dev/1.0/docker-compose.yml"
			}
		},
		{
			"type": 3,
			"title": "Azure IoT Edge",
			"description": "Azure IoT Edge Runtime",
			"note": "Deploys the runtime for Azure IoT Edge 1.1 on Debian Buster. <h4><span class=\"label label-warning image-tag ng-scope\">You are on the development container registry! Images from this registry are not for production use!</span></h4>",
			"categories": ["UC20-WL2000", "IOT-GW30", "Azure"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/weidmueller/uc-container-templates/master/logos/uc-addon-azure-iot-edge-beta.svg",
			"repository": {
				"url": "https://github.com/weidmueller/uc-container-templates",
				"stackfile": "stacks/uc-addon-azure-iot-edge/dev/1.0/docker-compose.yml"
			},
			"env": [{
				"name": "DEVICE_CONNECTION_STR",
				"label": "Device Connection String",
				"description": "Obtain an Azure IoT Hub device connection string by registering a new device in the Azure Device Explorer."
			}]
		},
		{
			"type": 3,
			"title": "easyConnect IIoT & Telemetry",
			"description": "Enable your device to send data to Weidmüller easyConnect",
			"note": "Onboard your device and manage your connection to Weidmüller easyConnect. Collect data from different sources and publish it to easyConnect via the Tag Editor.<br>To provision the IIoT Connector, please navigate to http://[IP of this Device]:59256.<br>To access the Tag Editor, please navigate to http://[IP of this Device]:16702.<br>Make sure to use http://, not https://.<br><h4><span class=\"label label-warning image-tag ng-scope \">You are on the development container registry! Images from this registry are not for production use!</span></h4>",
			"categories": ["UC20-WL2000"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/weidmueller/uc-container-templates/master/logos/uc-addon-easyconnect-iiot-telemetry-beta.png",
			"repository": {
				"url": "https://github.com/weidmueller/uc-container-templates",
				"stackfile": "stacks/uc-addon-easyconnect-iiot/dev/1.0/docker-compose.yml"
			},
			"env": [{
				"name": "ARTICLE_NAME",
				"label": "Article Name",
				"description": "Article Name of the Device"
			}, {
				"name": "ARTICLE_NUMBER",
				"label": "Article Number",
				"description": "Article Number of the Device"
			}, {
				"name": "MANUFACTURER",
				"label": "Manufacturer",
				"description": "Name of the Device Manufacturer",
				"default": "Weidmüller Interface GmbH & Co. KG"
			}, {
				"name": "SERIALNUMBER",
				"label": "Serial Number",
				"description": "Serial Number of the Device"
			}]
		},
		{
			"type": 3,
			"title": "PROCON WEB Embedded System",
			"description": "HMI runtime for intuitive and web-based machine operation",
			"note": "HMI runtime for intuitive and web-based machine operation, version 6.4.5<br>To access the HMI, please navigate to http://ipOfThisDevice:16700.<br>To access the PROCON WEB System Management, please navigate to http://[IP of this Device]:16701.<br>Make sure to use http://, not https://.<br><h4><span class=\"label label-warning image-tag ng-scope \">You are on the development container registry! Images from this registry are not for production use!</span></h4>",
			"categories": ["UC20-WL2000"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/weidmueller/uc-container-templates/master/logos/uc-addon-procon-web-es.png",
			"repository": {
				"url": "https://github.com/weidmueller/uc-container-templates",
				"stackfile": "stacks/uc-addon-procon-web-es/dev/1.0/docker-compose.yml"
			}
		}, {
			"type": 3,
			"title": "Debian for CODESYS",
			"description": "Debian Bullseye Slim with CODESYS dependendcies",
			"note": "This debian:bullseye-slim based image can be used to install <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://store.codesys.com/en/codesys-control-for-linux-arm-sl-bundle.html\">CODESYS Control for Linux ARM SL</a>.<br>This App Template is meant to be used on IOT-GW30, as it tries to mount the serial devices for RS232 (/dev/ttyAMA0) and RS485 (/dev/ttyAMA2). This will fail on UC20-WL2000. Adapt the template if needed by \"Copy as Custom\".<h4><span class=\"label label-warning image-tag ng-scope\">You are on the development container registry! Images from this registry are not for production use!</span></h4>",
			"categories": ["IOT-GW30"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/weidmueller/uc-container-templates/master/logos/debian.svg",
			"repository": {
				"url": "https://github.com/weidmueller/uc-container-templates",
				"stackfile": "stacks/debian/dev/1.0/docker-compose.yml"
			},
			"env": [{
					"name": "USER",
					"label": "Username",
					"description": "Name of the Linux User. Also used for SSH.",
					"default": "weidmueller"
				},
				{
					"name": "PASSWD",
					"label": "Password",
					"description": "Password of the Linux user. Also used for SSH."
				},
				{
				"name": "SSHPORT",
				"label": "SSH Server Port",
				"description": "The TCP port that the SSH daemon is listening on.",
				"default": "2222"
			}]
		}, {
			"type": 3,
			"title": "Node-RED for u-create web",
			"description": "Flow-based programming tool",
			"note": "This distribution of Node-RED includes Weidmüller's iodata nodes to access global variables.<h4><span class=\"label label-warning image-tag ng-scope\">You are on the development container registry! Images from this registry are not for production use!</span></h4>",
			"categories": ["UC20-WL2000", "IOT-GW30"],
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/weidmueller/uc-container-templates/master/logos/uc-addon-node-red-beta.svg",
			"repository": {
				"url": "https://github.com/weidmueller/uc-container-templates",
				"stackfile": "stacks/uc-addon-node-red/dev/1.0/docker-compose.yml"
			},
			"env": [{
				"name": "PORT",
				"label": "Web Server Port",
				"description": "The TCP port that the Node-RED web server is listening on.",
				"default": "1881"
			}]
		},
		{
			"type": 3,
			"title": "TeamViewer IoT Agent & Connector for u-create web",
			"description": "Publish u-control global variables to the TeamViewer IoT Service",
			"note": "Deploys a stack comprised of the TeamViewer IoT Agent and a Connector App to publish u-control global variables as TeamViewer metrics. <br>Please read and accept the <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.teamviewer.com/en/eula/\"><b>TeamViewer EULA</b></a>.<h4><span class=\"label label-warning image-tag ng-scope\">You are on the development container registry! Images from this registry are not for production use!</span></h4>",
			"logo": "https://raw.githubusercontent.com/weidmueller/uc-container-templates/master/logos/uc-addon-teamviewer-iot-beta.svg",
			"categories": ["UC20-WL2000", "TeamViewer"],
			"platform": "linux",
			"repository": {
				"url": "https://github.com/weidmueller/uc-container-templates",
				"stackfile": "stacks/uc-addon-teamviewer-iot/dev/1.0/docker-compose.yml"
			},
			"env": [{
					"name": "EULA_ACCEPTED",
					"label": "Accept TeamViewer EULA",
					"description": "Please accept the TeamViewer EULA to use the Teamviewer IoT Agent.",
					"select": [{
							"text": "Yes, I've read and accept the TeamViewer EULA",
							"value": "Yes"
						},
						{
							"text": "No, I do not accept the TeamViewer EULA",
							"value": "No",
							"default": true
						}
					]
				}, {
					"name": "ASSIGNMENT_API_TOKEN",
					"label": "TeamViewer IoT Assignment Token",
					"description": "The assignment token must be obtained from the TeamViewer IoT Management Console."
				},
				{
					"name": "ASSIGNMENT_GROUP_NAME",
					"label": "TeamViewer IoT Assignment Group Name",
					"description": "The device will be assigned to this group in the TeamViewer IoT Device Inventory."
				},
				{
					"name": "HOSTNAME",
					"label": "Device Name",
					"description": "The device will be registered in the TeamViewer IoT Device Inventory under this name.",
					"default": "Weidmüller IoT Device"
				},
				{
					"name": "SENSOR_NAME",
					"label": "TeamViewer Sensor Name",
					"description": "Name of the sensor under which the metrics of this device are published. If left empty, a default name is generated."
				},
				{
					"name": "UPDATE_INTERVAL",
					"label": "Update Interval",
					"description": "Metrics are published periodically at this interval.",
					"select": [{
							"text": "1s",
							"value": "1000"
						},
						{
							"text": "2s",
							"value": "2000"
						}, {
							"text": "5s",
							"value": "5000",
							"default": true
						}, {
							"text": "10s",
							"value": "10000"
						}, {
							"text": "1m",
							"value": "60000"
						}, {
							"text": "10m",
							"value": "600000"
						}
					]
				},
				{
					"name": "VAR_PREFIX",
					"label": "Filter Global Variables by Prefix",
					"description": "Only global variables starting with this prefix are published as metrics. Leave empty to publish all global variables."
				}
			]
		},
		{
			"type": 1,
			"title": "TeamViewer IoT Agent",
			"description": "Deploys the TeamViewer IoT Agent standalone, e.g. on IOT-GW30",
			"note": "Deploys the TeamViewer IoT Agent standalone. Multiple Sensors or Connectors might connect to this agent. <br>Please read and accept the <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.teamviewer.com/en/eula/\"><b>TeamViewer EULA</b></a>.<h4><span class=\"label label-warning image-tag ng-scope\">You are on the development container registry! Images from this registry are not for production use!</span></h4>",
			"categories": ["UC20-WL2000", "IOT-GW30", "TeamViewer"],
			"restart_policy": "unless-stopped",
			"platform": "linux",
			"logo": "https://raw.githubusercontent.com/weidmueller/uc-container-templates/master/logos/uc-addon-teamviewer-iot-beta.svg",
			"image": "tviot-agent:2.17.3",
			"registry": "wmucdev.azurecr.io",
			"name": "uc-addon-teamviewer-iot-agent",
			"env": [{
					"name": "EULA_ACCEPTED",
					"label": "Accept TeamViewer EULA",
					"description": "Please accept the TeamViewer EULA to use the Teamviewer IoT Agent.",
					"select": [{
							"text": "Yes, I've read and accept the TeamViewer EULA",
							"value": "Yes"
						},
						{
							"text": "No, I do not accept the TeamViewer EULA",
							"value": "No",
							"default": true
						}
					]
				}, {
					"name": "ASSIGNMENT_API_TOKEN",
					"label": "TeamViewer IoT Assignment Token",
					"description": "The assignment token must be obtained from the TeamViewer IoT Management Console."
				},
				{
					"name": "ASSIGNMENT_GROUP_NAME",
					"label": "TeamViewer IoT Assignment Group Name",
					"description": "The device will be assigned to this group in the TeamViewer IoT Device Inventory."
				},
				{
					"name": "HOSTNAME",
					"label": "Device Name",
					"description": "The device will be registered in the TeamViewer IoT Device Inventory under this name.",
					"default": "Weidmüller IoT Device"
				}, {
					"name": "SERIAL_NUMBER_DOCKER_CONTAINER",
					"default": "wm-tviot-agent",
					"preset": true
				}, {
					"name": "ENABLE_APP_CONTROL",
					"default": 1,
					"preset": true
				}, {
					"name": "APP_CONTROL_PORT",
					"default": 80,
					"preset": true
				}, {
					"name": "APP_CONTROL_URL_SUFFIX",
					"default": "",
					"preset": true
				}, {
					"name": "APP_CONTROL_NAVIGATION_PANEL",
					"default": 0,
					"preset": true
				}, {
					"name": "ENABLE_REMOTE_TERMINAL",
					"default": 0,
					"preset": true
				}, {
					"name": "ENABLE_APP_CONNECTED",
					"default": 0,
					"preset": true
				}, {
					"name": "APP_CONNECTED_ALLOWED_PORTS",
					"default": 443,
					"preset": true
				}
			],
			"network": "host",
			"volumes": [{
				"uc-addon-tviot-agent": "/tviot"
			}]
		}
	]
}
